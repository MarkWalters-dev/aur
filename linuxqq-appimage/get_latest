#!/bin/node

require('console');

const args = process.argv.slice(2)
const archs = args.length < 1 ? [`x86_64`] : args;

const fs = require('fs');
const path = require('path');
const syncRequest = require('sync-request');
const os = require('os');

require('seajs');

const file = "linuxQQDownload"
const indexUrl = "https://im.qq.com/linuxqq/index.shtml";
var url;
try {
  url = syncRequest('GET', indexUrl).body.toString().match(new RegExp(`https?://[\\w\\.\\/\\-\\_]+/${file}\\.js\\?t=[0-9]+`))[0];
} catch (err) {
  url = `https://cdn-go.cn/qq-web/im.qq.com_new/latest/rainbow/${file}.js`;
}
const res = syncRequest('GET', url);

fs.mkdtemp(path.join(os.tmpdir(), "/"), (err, directory) => {
  if (err) throw err;

  seajs.config({
    base: directory,
  });

  fs.writeFileSync(path.join(directory, `${file}.js`), res.body);

  seajs.use(`${file}`, function (config) {
    console.log(`version=${config.version}`);
    console.log(`updateDate=${config.updateDate}`);

    for (const key in archs) {
      const arch = archs[key];

      let config_index;
      switch (arch) {
        case `x86_64`:
          config_index = `x64DownloadUrl`;
          break;
        case `aarch64`:
          config_index = `armDownloadUrl`;
          break;
        case `loong64`:
          config_index = `loongarchDownloadUrl`;
          break;
        default:
          throw new Error(`This arch is currently not supported`);
      }

      console.log(`url_${arch}=${config[config_index].appimage}`);
    }
  });

  fs.rm(directory, { recursive: true }, (err) => {
    if (err) throw err;
  });
});
