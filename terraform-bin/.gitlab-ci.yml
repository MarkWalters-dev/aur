image: manjarolinux/base:latest

variables:
  GIT_SSH_COMMAND: "ssh -o StrictHostKeyChecking=no"

before_script:
  - pacman -Syu --noconfirm sed jq binutils gtk3 libxss libindicator-gtk2 nss dbus-glib libdbusmenu-gtk2 git openssh curl
  - useradd -m builduser
  - passwd -d builduser
  - printf 'builduser ALL=(ALL) ALL\n' | tee -a /etc/sudoers
  - eval $(ssh-agent -s)
  - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
  - mkdir -p ~/.ssh
  - chmod 700 ~/.ssh

stages:
  - find_release
  - test
  - release
  - commit

find_release_job:
  stage: find_release
  script: 
    - rm -f build.env > /dev/null 2>&1 # clean build.env
    - current_version=$(grep -Po "^pkgver=\K.*" PKGBUILD)
    - version=$(curl -s https://api.github.com/repos/hashicorp/terraform/releases/latest | jq -r '.tag_name')
    - version=${version#v} # remove the v from the version
    - if [ "$current_version" != "$version" ]; then
    - echo "Found version $version"
    - echo "pkgver=$version" > build.env
    - else 
    - echo "No new version"
    - fi
  artifacts:
    reports:
      dotenv: build.env
    paths:
      - build.env
  rules:
    - if: '$CI_COMMIT_BRANCH == "main" && $CI_PIPELINE_SOURCE == "schedule"'

test_job:
  stage: test
  script:
    - if [ -z "$pkgver" ]; then echo "version variable does not exist, skipping job"; exit 0; fi
    - sed -i "s/^pkgver=.*/pkgver=${pkgver}/" PKGBUILD
    - su -c "cd ${CI_PROJECT_DIR} && ./test" - builduser
  dependencies:
    - find_release_job
  artifacts:
    reports:
      dotenv: build.env
    paths:
      - PKGBUILD
      - .SRCINFO
      - build.env
  rules:
    - if: '$CI_COMMIT_BRANCH == "main" && $CI_PIPELINE_SOURCE == "schedule"'


release_job:
  stage: release
  script:
    - if [ -z "$pkgver" ]; then echo "version variable does not exist, skipping job"; exit 0; fi
    - git config --global user.email "zomundo@gmail.com"
    - git config --global user.name "Mundo"
    - git remote add aur ssh://aur@aur.archlinux.org/terraform-bin.git 
    - git fetch aur master
    - git config pull.rebase true
    - git branch --list
    - git remote -v
    - git checkout -b master
    - pk_name=$(grep -Po "^pkgname=\K.*" PKGBUILD)
    - pk_ver=$(grep -Po "^pkgver=\K.*" PKGBUILD)
    - pk_rel=$(grep -Po "^pkgrel=\K.*" PKGBUILD)
    - commit_msg="update to $pk_name ver $pk_ver, rel version $pk_rel"
    - git add PKGBUILD .SRCINFO
    - git commit -m "$commit_msg"
    - git push aur master

  dependencies:
    - test_job
  artifacts:
    reports:
      dotenv: build.env
    paths:
      - PKGBUILD
      - .SRCINFO
      - build.env
  rules:
    - if: '$CI_COMMIT_BRANCH == "main" && $CI_PIPELINE_SOURCE == "schedule"'

commit_job:
  stage: commit
  script:
    - if [ -z "$pkgver" ]; then echo "version variable does not exist, skipping job"; exit 0; fi
    - git config --global user.email "zomundo@gmail.com"
    - git config --global user.name "Mundo"
    - git remote add glab "https://oauth2:${CI_JOB_TOKEN}@${CI_SERVER_HOST}/${CI_PROJECT_PATH}.git"
    - git fetch glab
    - git checkout -b main
    - pk_name=$(grep -Po "^pkgname=\K.*" PKGBUILD)
    - pk_ver=$(grep -Po "^pkgver=\K.*" PKGBUILD)
    - pk_rel=$(grep -Po "^pkgrel=\K.*" PKGBUILD)
    - commit_msg="update to $pk_name ver $pk_ver, rel version $pk_rel"
    - git add PKGBUILD .SRCINFO
    - git commit -m "$commit_msg"
    - git push glab main
  dependencies:
    - release_job
  artifacts:
    reports:
      dotenv: build.env
    paths:
      - PKGBUILD
      - .SRCINFO
  rules:
    - if: '$CI_COMMIT_BRANCH == "main" && $CI_PIPELINE_SOURCE == "schedule"'
