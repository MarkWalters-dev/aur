diff --git a/CMake/FindMbedTLS.cmake b/CMake/FindMbedTLS.cmake
index 97c45150a7..d4c47ad834 100644
--- a/CMake/FindMbedTLS.cmake
+++ b/CMake/FindMbedTLS.cmake
@@ -1,8 +1,8 @@
-find_path(MBEDTLS_INCLUDE_DIR mbedtls/ssl.h)
+find_path(MBEDTLS_INCLUDE_DIR mbedtls/ssl.h PATH_SUFFIXES mbedtls2)
 
-find_library(MBEDTLS_LIBRARY mbedtls)
-find_library(MBEDX509_LIBRARY mbedx509)
-find_library(MBEDCRYPTO_LIBRARY mbedcrypto)
+find_library(MBEDTLS_LIBRARY mbedtls PATH_SUFFIXES mbedtls2)
+find_library(MBEDX509_LIBRARY mbedx509 PATH_SUFFIXES mbedtls2)
+find_library(MBEDCRYPTO_LIBRARY mbedcrypto PATH_SUFFIXES mbedtls2)
 
 set(MBEDTLS_INCLUDE_DIRS ${MBEDTLS_INCLUDE_DIR})
 set(MBEDTLS_LIBRARIES ${MBEDTLS_LIBRARY} ${MBEDX509_LIBRARY} ${MBEDCRYPTO_LIBRARY})
diff --git a/CMakeLists.txt b/CMakeLists.txt
index 1abb7d7cbf..56db5588e6 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -602,6 +602,7 @@ else()
   add_subdirectory(Externals/enet)
 endif()
 
+check_lib(XXHASH libxxhash xxhash xxhash.h)
 if(NOT XXHASH_FOUND)
   message(STATUS "Using static xxhash from Externals")
   add_subdirectory(Externals/xxhash)
@@ -673,7 +674,7 @@ else()
   set(LZO lzo2)
 endif()
 
-if(NOT APPLE AND NOT MSVC AND NOT LIBRETRO)
+if(NOT APPLE AND NOT MSVC)
   check_lib(PNG libpng png png.h QUIET)
 endif()
 if (PNG_FOUND)
@@ -770,7 +771,7 @@ else()
 endif()
 
 find_package(CURL)
-if(CURL_FOUND AND NOT(LIBRETRO))
+if(CURL_FOUND)
   message(STATUS "Using shared libcurl")
   include_directories(${CURL_INCLUDE_DIRS})
 else()
diff --git a/Source/Core/Core/Debugger/PPCDebugInterface.cpp b/Source/Core/Core/Debugger/PPCDebugInterface.cpp
index f44c20d7f2..1ebd0f8d5b 100644
--- a/Source/Core/Core/Debugger/PPCDebugInterface.cpp
+++ b/Source/Core/Core/Debugger/PPCDebugInterface.cpp
@@ -4,6 +4,7 @@
 
 #include "Core/Debugger/PPCDebugInterface.h"
 
+#include <algorithm>
 #include <array>
 #include <cstddef>
 #include <string>
diff --git a/Source/Core/Core/IOS/FS/FileSystemProxy.cpp b/Source/Core/Core/IOS/FS/FileSystemProxy.cpp
index 181a739748..a8d8ba280c 100644
--- a/Source/Core/Core/IOS/FS/FileSystemProxy.cpp
+++ b/Source/Core/Core/IOS/FS/FileSystemProxy.cpp
@@ -272,7 +272,7 @@ IPCCommandResult FS::Seek(const SeekRequest& request)
 
   const Result<u32> result =
       m_ios.GetFS()->SeekFile(handle.fs_fd, request.offset, IOS::HLE::FS::SeekMode(request.mode));
-  LogResult(result, "Seek({}, 0x{:08x}, {})", handle.name.data(), request.offset, request.mode);
+  LogResult(result, "Seek({}, 0x{:08x}, {})", handle.name.data(), request.offset, static_cast<int>(request.mode));
   if (!result)
     return GetFSReply(ConvertResult(result.Error()));
   return GetFSReply(*result);
