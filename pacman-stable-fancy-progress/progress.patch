diff --git a/src/pacman/callback.c b/src/pacman/callback.c
index 2823d510..255f68a2 100644
--- a/src/pacman/callback.c
+++ b/src/pacman/callback.c
@@ -155,10 +155,26 @@ static void fill_progress(const int percent, const int proglen)
 	/* 8 = 1 space + 1 [ + 1 ] + 5 for percent */
 	const int hashlen = proglen > 8 ? proglen - 8 : 0;
 	const int hash = percent * hashlen / 100;
+	const char* terms[] = {"xterm-kitty", "st-256color"};
+	char* TERM;
+	int fancy = 0;
 	int i;
 
+	TERM = getenv("TERM");
+	if(TERM != NULL) {
+		for(i = 0; i < sizeof(terms)/sizeof(terms[0]); i++) {
+			if(!strcmp(TERM, terms[i])) {
+				fancy = 1;
+			}
+		}
+	}
+
 	if(hashlen > 0) {
-		fputs(" [", stdout);
+		if(fancy) {
+			fputs(" ", stdout);
+		} else {
+			fputs(" [", stdout);
+		}
 		for(i = hashlen; i > 0; --i) {
 			/* if special progress bar enabled */
 			if(config->chomp) {
@@ -177,12 +193,28 @@ static void fill_progress(const int percent, const int proglen)
 				}
 			} /* else regular progress bar */
 			else if(i > hashlen - hash) {
-				putchar('#');
+				if(fancy) {
+					fputs("", stdout);
+				} else {
+					putchar('#');
+				}
 			} else {
-				putchar('-');
+				if(fancy) {
+					fputs("", stdout);
+				} else {
+					putchar('-');
+				}
+			}
+		}
+		if(fancy){
+			if (hashlen == hash) {
+				fputs("", stdout);
+			} else {
+				fputs("", stdout);
 			}
+		} else {
+			putchar(']');
 		}
-		putchar(']');
 	}
 	/* print display percent after progress bar */
 	/* 5 = 1 space + 3 digits + 1 % */
