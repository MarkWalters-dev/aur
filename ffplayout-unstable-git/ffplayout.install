post_install() {
    
    systemctl unmask ffplayout.service >/dev/null || true
    systemctl --system daemon-reload >/dev/null || true
    
    sysUser="ffpu"
    IP=$(ip route get 1.2.3.4 | awk '{if($7 !~ /^[[:space:]]*$/) print $7}')
    
    if [ -f /run/.containerenv ] || [ -f /run/.dockerenv ] || [ -f /.dockerenv ] || [ -f /.dockerinit ]; then
        sysUser="root"
    fi
    
    if [ ! $(id -u $sysUser 2>/dev/null || echo -1) -ge 0 ]; then
        useradd -m --system $sysUser || adduser --system --create-home $sysUser >/dev/null || adduser --system --home "/home/$sysUser" $sysUser
    fi
    
    if [ ! -d "/usr/share/ffplayout/db" ]; then
        mkdir "/usr/share/ffplayout/db"
        mkdir -p "/var/lib/ffplayout/playlists"
        mkdir -p "/var/lib/ffplayout/tv-media"
        
        /usr/bin/ffplayout -u admin \
        -p admin \
        -m ffplayout@example.org \
        --shared-storage
        
        chown -R ${sysUser}: "/usr/share/ffplayout"
        chown -R ${sysUser}: "/var/lib/ffplayout"
    else
        chown -R ${sysUser}: "/usr/share/ffplayout"
        chown -R ${sysUser}: "/var/lib/ffplayout"
    fi
    
    if [ ! -d "/var/log/ffplayout" ]; then
        mkdir "/var/log/ffplayout"
        
        chown ${sysUser}: "/var/log/ffplayout"
    else
        chown ${sysUser}: "/var/log/ffplayout"
    fi
    
    tab="   "
    echo -e "1. Activate systemd service:"
    echo -e "   $ systemctl enable --now ffplayout"
    echo -e "2. Use a reverse proxy for SSL, Port is 8787."
    echo -e "3. Login with your browser, address without proxy would be: http://${IP}:8787, \n${tab}the default account is \"admin\" and the password is \"admin\"."
    echo -e "4. Default location for playlists and media files are: /var/lib/ffplayout/."
    echo -e "5. If you want to change the default global settings:"
    echo -e "   $ sudo rm -v /usr/share/ffplayout/db/*"
    echo -e "   $ sudo -u ffpu ffplayout -i"
    
}

post_upgrade() {
    post_install
}

pre_remove() {
    
    if [ -d /run/systemd/system ]; then
        for service in $(systemctl list-units --type service --all --no-legend --plain | grep 'ffplayout' | awk '{print $1}'); do
            systemctl stop "$service" >/dev/null || true
        done
    fi
    
}

post_remove() {
    
    systemctl --system daemon-reload >/dev/null || true
    systemctl unmask ffplayout.service >/dev/null || true
    
    sysUser="ffpu"
    
    if [ $(id -u $sysUser 2>/dev/null || echo -1) -ge 0 ]; then
        userdel $sysUser
    fi
    
}
