diff -ruNb a/SConstruct b/SConstruct
--- a/SConstruct	2024-02-13 02:46:45.000000000 -0600
+++ b/SConstruct	2024-11-02 00:13:54.698470853 -0500
@@ -2197,7 +2197,6 @@
     env.Append( CCFLAGS=["-fno-omit-frame-pointer",
                          "-fno-strict-aliasing",
                          "-fasynchronous-unwind-tables",
-                         "-ggdb" if not env.TargetOSIs('emscripten') else "-g",
                          "-pthread",
                          "-Wall",
                          "-Wsign-compare",
@@ -2209,6 +2208,10 @@
             env.Append( CCFLAGS=["-Werror"] )
 
     env.Append( CXXFLAGS=["-Woverloaded-virtual"] )
+    env.Append( CXXFLAGS=["-Wno-c++20-compat"] )
+    env.Append( CXXFLAGS=["-Wno-cpp"] )
+    env.Append( CXXFLAGS=["-Wno-interference-size"] )
+
     if env.ToolchainIs('clang'):
         env.Append( CXXFLAGS=['-Werror=unused-result'] )
 
@@ -2229,8 +2232,8 @@
 
     env.Append( LIBS=[] )
 
-    #make scons colorgcc friendly
-    for key in ('HOME', 'TERM'):
+    #make scons colorgcc, distcc, ccache friendly
+    for key in ('HOME', 'PATH', 'TERM', 'DISTCC_HOSTS'):
         try:
             env['ENV'][key] = os.environ[key]
         except KeyError:
@@ -2647,7 +2650,7 @@
 
         # This warning was added in clang-5 and incorrectly flags our implementation of
         # exceptionToStatus(). See https://bugs.llvm.org/show_bug.cgi?id=34804
-        AddToCCFLAGSIfSupported(myenv, "-Wno-exceptions")
+        AddToCXXFLAGSIfSupported(myenv, "-Wno-exceptions")
 
         # Enable sized deallocation support.
         AddToCXXFLAGSIfSupported(myenv, '-fsized-deallocation')
